@page
@model MilkBabyRazorWebApp.Pages.ProductsPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<style>
    .custom-create-button {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
        font-weight: bold;
    }

        .custom-create-button:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .custom-search-input {
        width: 200px;
        margin-right: 10px;
    }

    .custom-search-button {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

        .custom-search-button:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .pagination .page-link {
        color: #007bff;
    }

        .pagination .page-link:hover {
            color: #0056b3;
        }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

    /* Additional CSS for the table */
    .table th, .table td {
        vertical-align: middle;
    }

    .table th {
        background-color: #f8f9fa;
    }

    .table td img {
        max-width: 100px;
        height: auto;
    }

    .action-icons a {
        margin-right: 10px;
        color: #007bff;
    }

        .action-icons a:hover {
            color: #0056b3;
        }

    .action-icons .fa-edit {
        color: #28a745;
    }

    .action-icons .fa-info-circle {
        color: #17a2b8;
    }

    .action-icons .fa-trash {
        color: #dc3545;
    }

    .action-icons .fa-edit:hover {
        color: #218838;
    }

    .action-icons .fa-info-circle:hover {
        color: #117a8b;
    }

    .action-icons .fa-trash:hover {
        color: #c82333;
    }
</style>

<h1>Index</h1>

<div class="d-flex justify-content-between align-items-center mb-3">
    <a asp-page="Create" class="btn custom-create-button">Create New</a>
    <form method="get" class="d-flex align-items-center">
        <div class="form-group mr-2">
            <input class="form-control custom-search-input" type="search" placeholder="Search Product Name" aria-label="Search Product Name" name="nameKey" value="@Model.nameKey">
        </div>
        <div class="form-group mr-2">
            <input class="form-control custom-search-input" type="search" placeholder="Search Vendor Name" aria-label="Search Description" name="desKey" value="@Model.desKey">
        </div>
        <div class="form-group mr-2">
            <input class="form-control custom-search-input" type="search" placeholder="Search Product Description" aria-label="Search Category" name="cateKey" value="@Model.cateKey">
        </div>
        <button class="btn custom-search-button" type="submit">Search</button>
        <a asp-page="./Index" asp-route-nameKey="" asp-route-desKey="" asp-route-cateKey="" class="btn btn-secondary ml-2">Clear Filters</a>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductName)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductDescription)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductPrice)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductQuantity)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductDateStart)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductDateEnd)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductCategory)</th>
            <th>@Html.DisplayNameFor(model => model.Product[0].ProductImg)</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Product)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductDescription)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductPrice)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductQuantity)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductDateStart)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductDateEnd)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductCategory)</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ProductImg))
                    {
                        <img src="@item.ProductImg" alt="Product Image">
                    }
                </td>
                <td class="action-icons">
                    <a asp-page="./Edit" asp-route-id="@item.ProductId" title="Edit"><i class="fas fa-edit"></i></a>
                    <a asp-page="./Details" asp-route-id="@item.ProductId" title="Details"><i class="fas fa-info-circle"></i></a>
                    <a asp-page="./Delete" asp-route-id="@item.ProductId" title="Delete"><i class="fas fa-trash"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-PageNumber="@(Model.PageNumber - 1)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-page="./Index" asp-route-PageNumber="@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-PageNumber="@(Model.PageNumber + 1)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>